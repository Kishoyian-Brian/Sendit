// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  phone     String?
  role      Role     @default(USER)
  parcels   Parcel[] @relation("UserParcels")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Driver {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  phone     String?
  vehicle   String?
  status    String   @default("inactive") // active, on_delivery, etc.
  parcels   Parcel[] @relation("DriverParcels")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Parcel {
  id                Int      @id @default(autoincrement())
  trackingNumber    String   @unique
  senderId          Int
  sender            User     @relation("UserParcels", fields: [senderId], references: [id])
  recipientName     String
  recipientEmail    String
  recipientPhone    String?
  pickupAddress     String
  pickupLocation    String?   // e.g., "CBD, Nairobi, Kenya"
  deliveryAddress   String
  deliveryLocation  String?   // e.g., "Westlands, Nairobi, Kenya"
  driverId          Int?
  driver            Driver?   @relation("DriverParcels", fields: [driverId], references: [id])
  status            String    @default("pending") // pending, in_transit, delivered, etc.
  currentLat        Float?
  currentLng        Float?
  currentAddress    String?
  weight            String?   // e.g., "2.5kg", "5lbs"
  description       String?   // Package description
  deliveredAt       DateTime?
  // Route optimization fields
  optimizedRoute    Json?     // Store the calculated route as JSON
  routeDistance     Float?    // Total route distance in km
  routeDuration     Int?      // Total route duration in seconds
  estimatedArrival  DateTime? // ETA for delivery
  routePolyline     String?   // Encoded polyline for map display
  routeInstructions Json?     // Turn-by-turn instructions
  route             RoutePoint[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model RoutePoint {
  id        Int      @id @default(autoincrement())
  parcelId  Int
  parcel    Parcel   @relation(fields: [parcelId], references: [id])
  lat       Float
  lng       Float
  timestamp DateTime @default(now())
}

model MailLog {
  id        Int      @id @default(autoincrement())
  to        String
  subject   String
  body      String
  sentAt    DateTime @default(now())
  status    String   // sent, failed, etc.
}

enum Role {
  USER
  DRIVER
  ADMIN
}